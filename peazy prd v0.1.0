Peazy MVP V0.1.0 — Product Requirements Document

Author (CPO) • Stakeholders — CEO (Kush), CTO (Cursor) • Status — For Engineering Review

1 Vision & Opportunity

Peazy transforms corporate software training from “watch‑to‑learn” into “learn‑by‑doing.” An AI coach speaks to the learner, draws a live pointer on the shared screen, and waits while the learner performs each step. Peazy also supports on‑the‑spot Ask‑Me‑Anything (AMA) help.

2 Strategic Architecture Decision

Layer

Primary Choice

Rationale

Contingency

Transport / SFU

Daily.co WebRTC Cloud

90 % of multimodal demo already works; zero infra; fast path to guided flows

If latency, scale, or E2EE gaps emerge → migrate the same agent layer to LiveKit via community pipecat‑livekit plugin or direct LiveKit Cloud.

Agent Framework

Pipecat core (pipecat-ai/pipecat)

Pipeline‑first design, rich Gemini integration, visual Flow designer

n/a

Guided‑Flow Authoring

Pipecat Flows + visual editor

Drag‑and‑drop curriculum builder out‑of‑box

none

Chrome Extension + Learner UI

Fork ``: screen + mic capture, pointer overlay

Provides 90 % of interaction loop

Replace Daily SDK with LiveKit SDK if transport migrates

Dashboard / Admin UI

`` React components + Next.js shell

Rapid assembly of auth, session lists, flow editor embed

none

Hosting

Google Kubernetes Engine for the Python agent containers or Pipecat Cloud for zero‑ops pilot

Keeps everything under GCP billing or offers managed fallback

Switch targets as needed—code is containerised

Why this stack?

Authoring studio and multimodal demo exist today → fastest “wow” path.

Python‑centric backend aligns with Gemini SDK and Cursor’s code‑gen strengths.

Transport layer can be swapped later without rewriting agent logic.

3 Goals & Success Metrics

Goal

Success Metric

Deliver a fluid, step‑by‑step guided tutorial with live pointer and voice

95 % of internal test runs complete without manual refresh; P90 pointer round‑trip < 1.5 s

AMA query resolution feels natural

80 % of test queries answered correctly on first attempt; P90 voice delay < 1 s

Authoring experience delights Training Managers

Create a 3‑step flow in ≤ 5 minutes without engineering help

Cost Visibility

Real‑time dashboard shows per‑session Daily minutes & Gemini token spend with 98 % accuracy

4 In‑Scope Functionality

4.1 Learner Experience

Start Session button in Chrome extension → captures screen & mic, joins Daily room.

Voice coach says greeting; pointer appears; waits for learner action.

AMA hot‑key triggers free‑form question flow.

4.2 Authoring & Admin

Training Manager logs into web dashboard; launches Flow Designer (Pipecat Flows GUI).

Can publish, version, duplicate, deactivate flows.

Session list shows: user, flow ID, duration, completion %.

4.3 Agent Logic

Pipeline: Audio/Video In → STT → Pipecat Flow → Gemini LLM → TTS → Audio Out + Pointer JSON.

Pointer messages follow schema {action:"draw_pointer", coordinates:{x:int,y:int}} over Daily Data Channel.

Config flag to enable LiveKit transport via plugin without code change elsewhere.

4.4 Security & Privacy

Screen frames processed ephemerally; no persistent video unless recording toggle is on.

All JWTs scoped to single room & <15‑min TTL.

SOC‑2 roadmap: log aggregation, IAM least‑privilege, incident run‑book drafted.

4.5 Out of Scope (v0.1.0)

Multi‑learner group sessions.

Full LMS grade‑book export.

Native mobile apps (iOS / Android).

5 Open Risks & Mitigations

Risk

Likelihood

Impact

Mitigation

Daily DataChannel jitter affects pointer accuracy

Medium

Med‑High

Benchmark during spike; if >100 ms jitter → pivot to LiveKit transport

Recording gaps on Daily

Medium

Medium

Implement client‑side capture fallback; evaluate LiveKit Egress if needed

Authoring UI complexity

Low

High

User‑test Flow Designer tutorials; add wizard templates

6 Acceptance Criteria

“Star the GitHub repo” demo: learner follows 4‑step flow with pointer & voice, zero manual refresh.

CEO triggers AMA: “How to fork a repo?” → coach answers with pointer to Fork button.

Training Manager builds new 3‑step flow live during demo and publishes; learner receives it without extension update.

7 Next Actions (Engineering)

**Fork & run **`` — prove pointer overlay in Peazy extension.

Embed Pipecat Flows editor into dashboard shell.

Wrap pointer‑emit processor inside Pipecat agent pipeline.

Instrumentation hooks for latency & cost metrics.

Security pass: cookies → JWT; Data‑flow diagram.

(No calendar timelines — Cursor AI expected to generate code in hours; checkpoints tracked via pull‑requests & CI.)

8 Build & Deploy Plan

8.1 Monorepo Layout

peazy/
  extension/       # Chrome Extension – fork of gemini‑multimodal‑live‑demo
  dashboard/       # Next.js app + voice‑ui‑kit components
  agent/           # Pipecat pipelines, Flows definitions, pointer processor
  infra/           # Terraform / Helm / GitHub Actions / Dockerfiles
  docs/            # Architecture diagrams & ADRs

8.2 Local Bootstrap (Cursor‑assisted)

Clone seeds into matching sub‑folders:   * git clone https://github.com/pipecat-ai/gemini-multimodal-live-demo extension/   * git clone https://github.com/pipecat-ai/voice-ui-kit dashboard/   * git clone https://github.com/pipecat-ai/pipecat agent/

Replace Daily/Gemini API placeholders with .env.dev values.

docker compose up spins: Daily dev room, agent, dashboard, extension (via Chrome Dev mode).

Run E2E script (npm run e2e) to assert pointer round‑trip <1.5 s.

8.3 CI / CD Pipeline (GitHub Actions)

Stage

Key Steps

Lint/Test

• ESLint + PyLint + unit tests• Playwright E2E headless with mocked Gemini

Build Images

docker buildx for agent and dashboard-api; tag with SHA; push to Artifact Registry

Deploy

1) Cloud Run: dashboard-api (stateless, short‑lived)2) GKE Autopilot: agent Deployment with HPA & terminationGracePeriodSeconds: 1200 (circumvents Cloud Run’s 10‑s SIGTERM limit)

Post‑Deploy Checks

Curl health endpoints; verify Daily WebSocket connect; emit Slack hook on success

8.4 Secrets & Config

GitHub Secrets: GCP_SA_KEY, DAILY_API_KEY, GEMINI_API_KEY.

Use Workload Identity Federation for push‑to‑GCR to avoid long‑lived keys.

.env.prod pulled from Secret Manager at container start.

8.5 Chrome Extension Build & Publish

Workflow zips extension/ → peazy-extension.zip.

Upload via Chrome Web Store API in Canary channel on every main merge; Prod manual promotion.

8.6 Observability & Rollback

Cloud Monitoring dashboards: pointer RTT, Gemini token latency, Daily packet‑loss.

Alerting: Slack on P95 pointer RTT >1.5 s for 5 min.

Cloud Run automatic revision rollback; GKE rollout maxUnavailable: 0 so canary pod serves <10 % traffic for 5 min before full rollout.

8.7 Future Infra Levers

If Daily transport limits appear → drop in LiveKit plugin and redeploy agent on same GKE cluster – no change to extension/dashboard.

Shift agent to Pipecat Cloud for zero‑ops PoC; keep artifacts identical via Docker tags.

(Timeline intentionally omitted – Cursor AI expected to generate code & infra artefacts in hours.)

9 Cursor Engineering Rules

These rules serve as a CONTRIBUTING.md baseline to keep AI‑generated code reviewable, secure, and shippable.

9.1 Branch & Commit Conventions

Branches: feat/<issue-id>-<slug> or fix/<slug>.

Commits follow Conventional Commits 1.0 (feat:, fix:, docs:) for auto‑changelog & semantic versioning.

9.2 Code Standards

Python → PEP 8 + black (line length = 100).

TypeScript/JS → ESLint (Airbnb) + Prettier.

Functions < 40 LOC and single‑responsibility.

9.3 Testing & Quality Gates

Unit‑test coverage ≥ 80 % and cannot drop on PR.

Playwright E2E for each new learner flow.

CI fails on lint, type errors, or coverage regression.

9.4 Pull‑Request Checklist (auto‑template)



9.5 Documentation Standards

Docstrings for all public modules; usage examples for classes.

docs/ folder houses ADRs & architecture diagrams; update with each major decision.

9.6 Security & Secrets

Secrets never in repo; use GCP Secret Manager + GitHub OIDC.

Dependency scan via Dependabot & pip-audit / npm audit.

New packages require license & CVE review.

9.7 Infrastructure as Code

K8s manifests via Helm charts in infra/.

Terraform plans require pasted terraform plan diff in PR description.

9.8 AI‑Generated Code Guidance

Cursor runs black or eslint --fix before commit.

Large generated files (>300 LOC) need a top‑of‑file summary comment.

Complex AI logic must include inline explanatory comments.

9.9 Merge Policy

≥ 1 human LGTM + passing CI to merge.

Auto‑merge tags Docker images with Semantic Version.

9.10 Release & Rollback

main always deployable; merge triggers canary rollout.

Tag vX.Y.Z auto‑creates GitHub Release notes from Conventional Commits.

Argo Rollouts auto‑rollback on failed probes.

Build • Test • Deploy Plan

(Applies to monorepo ~/peazy; dashboard served static, only agent containerised)

Phase

Step

Detail

Owner (Cursor)

Success Gate

Build

B‑1 Env loader

Import .env in agent/server/sesame.py so backend boots without manual copy.

BE

Backend start without extra env steps



B‑2 Python lock

pip‑compile ➜ requirements.lock for reproducible Cloud‑Run builds.

BE

CI hash check ✓



B‑3 Node lock

Use npm ci; commit package-lock.json for agent/client & dashboard.

FE

npm audit high‑sev = 0



B‑4 Lint + unit

Add Ruff + pytest; ESLint + Vitest; run in GH Actions.

Dev‑Ops

CI green

Test

T‑1 Smoke CI

Headless script spins backend + two Vite servers, curls endpoints.

QA

0 errors



T‑2 Mini‑load

locust 10 VUs, 3‑turn sessions; DB lock check.

QA

P95 < 1.5 s

Deploy

D‑1 Container build

Dockerfile.agent → gcr.io/$PROJECT/peazy-agent:$SHA.

Dev‑Ops

Image < 450 MB



D‑2 Cloud Run

Min 1 / Max 3, timeout 900 s, Secret Manager env.

Dev‑Ops

/api/health 200



D‑3 Static frontends

npm run build → agent/client/dist to Cloud Storage + CDN.

FE

https://app.peazy.com 200



D‑4 CI/CD

GH Action: lint → test → build → deploy → bucket sync.

Dev‑Ops

Pipeline < 8 min



D‑5 Observability

Cloud Monitoring P99 alert > 2 s; Daily QoS → Pub/Sub → BQ.

Dev‑Ops

Alert fires on manual 503

Post‑deploy

P‑1 Canary

10 % traffic 24 h, auto‑promote if clean.

PM/Dev‑Ops

No 5xx spike



P‑2 Retrospective

Collect latency & cost; decide on LiveKit migration.

C‑suite

Decision recorded

Immediate Cursor tickets

Env‑loader patch   2. Dockerfile.agent + Cloud Build   3. GH Actions pipeline   4. Static hosting script   5. Locust load‑test   6. Alert policy IaC

